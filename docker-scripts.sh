#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    printf "${1}${2}${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo "üê≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –¥–ª—è Rating Telegram Bot"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  build     - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  compose   - –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ docker-compose"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞
build_image() {
    print_color $BLUE "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
    docker build -t rating-telegram-bot .
    print_color $GREEN "‚úÖ –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
start_container() {
    print_color $BLUE "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
    if docker ps -q -f name=rating-bot-container | grep -q .; then
        print_color $YELLOW "‚ö†Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        docker stop rating-bot-container
        docker rm rating-bot-container
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker run -d \
        --name rating-bot-container \
        -p 8000:8000 \
        --env-file .env \
        --restart unless-stopped \
        -v $(pwd)/data:/app/data \
        rating-telegram-bot
    
    print_color $GREEN "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
    print_color $BLUE "üåê API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
stop_container() {
    print_color $YELLOW "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker stop rating-bot-container 2>/dev/null || true
    docker rm rating-bot-container 2>/dev/null || true
    print_color $GREEN "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_container() {
    stop_container
    start_container
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    print_color $BLUE "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker logs -f rating-bot-container
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    print_color $BLUE "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps -a | grep -E "(CONTAINER|rating-bot|rating-telegram-bot)" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    echo ""
    print_color $BLUE "üì¶ Docker –æ–±—Ä–∞–∑—ã:"
    docker images | grep -E "(REPOSITORY|rating-telegram-bot)" || echo "–û–±—Ä–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
clean_docker() {
    print_color $YELLOW "üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    docker system prune -f
    docker image prune -f
    print_color $GREEN "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ docker-compose
compose_up() {
    print_color $BLUE "üêô –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ docker-compose..."
    docker-compose up -d --build
    print_color $GREEN "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    build)
        build_image
        ;;
    start)
        build_image
        start_container
        ;;
    stop)
        stop_container
        ;;
    restart)
        build_image
        restart_container
        ;;
    logs)
        show_logs
        ;;
    status)
        show_status
        ;;
    clean)
        clean_docker
        ;;
    compose)
        compose_up
        ;;
    help|*)
        show_help
        ;;
esac
